name: CI/CD Pipeline for Website Deployment

on:
  push:
    branches:
      - master # Запускать pipeline при пуше в ветку master

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  ANSIBLE_USER: debian

jobs:
  deploy:
    runs-on: debian-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Установка Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6 # Версия Terraform

      # Шаг 3: Инициализация Terraform
      - name: Terraform Init
        run: cd terraform && terraform init

      # Шаг 4: Применение Terraform
      - name: Terraform Apply
        run: cd terraform && terraform apply -auto-approve

      # Шаг 5: Генерация inventory для Ansible
      - name: Generate Ansible Inventory
        id: generate_inventory
        run: |
          echo "Generating Ansible inventory..."
          IP=$(cd terraform && terraform output -json | jq -r '.jenkins_vm_ip.value')
          echo "[webservers]" > inventory.ini
          echo "$IP" >> inventory.ini
          echo "::set-output name=inventory::$(pwd)/inventory.ini"

      # Шаг 6: Установка Ansible
      - name: Setup Ansible
        uses: ansible/setup-ansible@v2

      # Шаг 7: Выполнение Ansible Playbook
      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ${{ steps.generate_inventory.outputs.inventory }} ansible/nginx-site.yml \
            -u $ANSIBLE_USER \
            --private-key <(echo "$SSH_PRIVATE_KEY" | base64 -d)